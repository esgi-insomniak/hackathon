<?php

namespace App\Tests\Api;

use App\Entity\Greeting;

class GreetingsTest extends AuthenticationTest
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->testJWTAuthentication();
    }

    public function testCreateGreeting(): void
    {
        static::createClient()->request('POST', '/greetings', [
            'headers' => [
                'Authorization' => 'Bearer ' . $this->jwtToken,
            ],
            'json' => [
                'name' => 'Test',
            ],
        ]);

        $this->assertResponseStatusCodeSame(201);
        $this->assertResponseHeaderSame('content-type', 'application/ld+json; charset=utf-8');
        $this->assertJsonContains([
            '@context' => '/contexts/Greeting',
            '@id' => '/greetings/1',
            '@type' => 'Greeting',
            'id' => 1,
            'name' => 'Test',
        ]);
    }

    public function testGetGreetings(): void
    {
        $response = static::createClient()->request('GET', '/greetings', [
            'headers' => [
                'Authorization' => 'Bearer ' . $this->jwtToken,
            ],
        ]);
        $this->assertResponseStatusCodeSame(200);
        $this->assertResponseHeaderSame('content-type', 'application/ld+json; charset=utf-8');
        $this->assertJsonContains([
            '@context' => '/contexts/Greeting',
            '@type' => 'hydra:Collection',
            'hydra:member' => [
                [
                    '@type' => 'Greeting',
                    'name' => 'Test',
                ],
            ],
            'hydra:totalItems' => 1,
        ]);
    }

    public function testDeleteGreeting(): void
    {
        $iri = $this->findIriBy(Greeting::class, ['name' => 'Test']);
        static::createClient()->request('DELETE', $iri, [
            'headers' => [
                'Authorization' => 'Bearer ' . $this->jwtToken,
            ],
        ]);
        $this->assertResponseStatusCodeSame(204);
    }
}
